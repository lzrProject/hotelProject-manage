spring:
  application:
    name: gateway-web
  #Redis配置
  redis:
    host: 118.25.242.174
    port: 6379
    password: 112233456
    #Redis数据库索引（默认为0）
    database: 0
    #连接超时时间（毫秒）
    timeout: 1800000
    lettuce:
      pool:
        max-active: 20
        #最大阻塞等待时间(负数表示没限制)
        max-wait: -1
        #连接池中的最大空闲连接
        max-idle: 5
        #连接池中的最小空闲连接
        min-idle: 0
  #静态资源路径


  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
        #唯一标识符
#        - id: hotel_login_route
          #用户请求需要路由到该服务【指定该服务的路由】
#          uri: http://localhost:18086
#          uri: lb://hotel-web

          #路由规则配置
#          predicates:
          #用户请求的域名规则配置  直接跳转服务地址
          #- Host=cloud.hotel.com**
          #所有以/houses/直接跳转服务地址
#          - Path=/**

#          filters:
          #过滤开始的路径(每一个/算一个路径)
#          - StripPrefix=1
          #请求添加前缀
          #- PrefixPath=/tb_houses

          #局部限流过滤器
#          - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
#            args:
#              key-resolver: "#{@ipKeyResolver}"
#              #每秒只允许1哥请求
#              redis-rate-limiter.replenishRate: 20
#              #允许并发有1哥请求
#              redis-rate-limiter.burstCapacity: 20
                #用户微服务
#            - id: hotel_goods_route
#              uri: lb://user
#              predicates:
#              - Path=/api/user/**
#              filters:
#              - StripPrefix=1
              #登录微服务
          - id: hotel_login_route
            uri: lb://user-auth
            predicates:
            - Path=/oauth/login/**, /admin/**, /component/**, /system/captcha/**, /oauth/user/**
#            filters:
#            - StripPrefix=1

          #主页微服务
          - id: hotel_index_route
            uri: lb://hotel-index
            predicates:
            - Path=/index/**, /console/**, /system/notice/notice/**, /logout/**, /admin/**, /component/**, /pear.config.json/**, /pear.config.yml/**, /user/login/** , /power/user/**, /power/**, /role/**, /user/**, /file/**, /error/**, /client/**, /house/**, /order/**,
        #    filters:
        #    - StripPrefix=1


server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    #以IP地址注册到服务中心，相互注册使用IP地址
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true
